// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphql-client basic batch mutation 1`] = `"mutation { m0: insert_vcs_Membership_one (object: {vcs_User: {data: {uid: \\"ashnet16\\", source: \\"GitHub\\", origin: \\"myghsrc\\"}, on_conflict: {constraint: {value: \\"vcs_User_pkey\\"}, update_columns: [{value: \\"refreshedAt\\"}]}}, vcs_Organization: {data: {uid: \\"faros-ai\\", source: \\"GitHub\\", origin: \\"myghsrc\\"}, on_conflict: {constraint: {value: \\"vcs_Organization_pkey\\"}, update_columns: [{value: \\"refreshedAt\\"}]}}, origin: \\"myghsrc\\"}, on_conflict: {constraint: {value: \\"vcs_Membership_pkey\\"}, update_columns: [{value: \\"origin\\"}, {value: \\"refreshedAt\\"}]}) { id } m1: insert_vcs_User_one (object: {uid: \\"betafood\\", type: {category: \\"User\\", detail: \\"user\\"}, source: \\"GitHub\\", origin: \\"myghsrc\\"}, on_conflict: {constraint: {value: \\"vcs_User_pkey\\"}, update_columns: [{value: \\"email\\"}, {value: \\"name\\"}, {value: \\"origin\\"}, {value: \\"refreshedAt\\"}, {value: \\"type\\"}, {value: \\"url\\"}]}) { id } }"`;

exports[`graphql-client write batch updates update_columns bug 1`] = `"mutation { m0: insert_tms_Task_one (object: {uid: \\"9\\", source: \\"jira\\", origin: \\"mytestsource\\"}, on_conflict: {constraint: tms_Task_pkey, update_columns: [origin]}) { id refreshedAt } m1: insert_tms_Task_one (object: {uid: \\"7\\", source: \\"jira\\", origin: \\"mytestsource\\"}, on_conflict: {constraint: tms_Task_pkey, update_columns: [origin]}) { id refreshedAt } m2: insert_tms_Task_one (object: {uid: \\"7\\", tms_Task: {data: {uid: \\"9\\", source: \\"jira\\"}, on_conflict: {constraint: tms_Task_pkey, update_columns: [refreshedAt]}}, source: \\"jira\\", origin: \\"mytestsource\\"}, on_conflict: {constraint: tms_Task_pkey, update_columns: [origin, parent]}) { id refreshedAt } }"`;

exports[`graphql-client write batch upsert basic end-to-end 1`] = `"mutation { insert_vcs_Organization (objects: [{uid: \\"faros-ai\\", source: \\"GitHub\\"}], on_conflict: {constraint: vcs_Organization_pkey, update_columns: [source, uid]}) { returning { id refreshedAt source uid } } }"`;

exports[`graphql-client write batch upsert basic end-to-end 2`] = `"mutation { insert_vcs_Repository (objects: [{name: \\"hermes\\", organizationId: \\"t1|gql-e2e-v2|GitHub|faros-ai\\"}, {name: \\"metis\\", organizationId: \\"t1|gql-e2e-v2|GitHub|faros-ai\\"}], on_conflict: {constraint: vcs_Repository_pkey, update_columns: [name, organizationId]}) { returning { id refreshedAt name organizationId } } }"`;

exports[`graphql-client write batch upsert basic end-to-end 3`] = `"mutation { insert_vcs_Branch (objects: [{name: \\"foo\\", origin: \\"mytestsource\\", repositoryId: \\"t1|gql-e2e-v2|metis|t1|gql-e2e-v2|GitHub|faros-ai\\"}, {name: \\"main\\", origin: \\"mytestsource\\", repositoryId: \\"t1|gql-e2e-v2|hermes|t1|gql-e2e-v2|GitHub|faros-ai\\"}], on_conflict: {constraint: vcs_Branch_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt name repositoryId } } }"`;

exports[`graphql-client write batch upsert mergeByPrimaryKey 1`] = `
Array [
  Object {
    "htmlUrl": "https://github.com/tovbinm",
    "name": "tovbinm",
    "origin": "mytestsource2",
    "source": "GitHub",
    "type": Object {
      "category": "User",
      "detail": "user",
    },
    "uid": "tovbinm",
  },
  Object {
    "htmlUrl": "https://github.com/vitalyg",
    "name": "vitalyg",
    "origin": "mytestsource",
    "source": "GitHub",
    "type": Object {
      "foo": "bar",
    },
    "uid": "vitalyg",
  },
  Object {
    "name": "vitality",
    "origin": "mytestsource",
    "source": null,
    "type": Object {
      "foo": "bar",
    },
    "uid": "vitalyg",
  },
]
`;

exports[`graphql-client write batch upsert on_conflict update_columns bug 1`] = `"mutation { insert_vcs_Organization (objects: [{uid: \\"faros-ai\\", source: \\"GitHub\\"}], on_conflict: {constraint: vcs_Organization_pkey, update_columns: [source, uid]}) { returning { id refreshedAt source uid } } }"`;

exports[`graphql-client write batch upsert on_conflict update_columns bug 2`] = `"mutation { insert_vcs_Repository (objects: [{name: \\"hermes\\", organizationId: \\"t1|gql-e2e-v2|GitHub|faros-ai\\"}], on_conflict: {constraint: vcs_Repository_pkey, update_columns: [name, organizationId]}) { returning { id refreshedAt name organizationId } } }"`;

exports[`graphql-client write batch upsert on_conflict update_columns bug 3`] = `"mutation { insert_vcs_Branch (objects: [{name: \\"foo\\", origin: \\"mytestsource\\"}], on_conflict: {constraint: vcs_Branch_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt name repositoryId } } }"`;

exports[`graphql-client write batch upsert on_conflict update_columns bug 4`] = `"mutation { insert_vcs_Branch (objects: [{name: \\"main\\", origin: \\"mytestsource\\", repositoryId: \\"t1|gql-e2e-v2|hermes|t1|gql-e2e-v2|GitHub|faros-ai\\"}], on_conflict: {constraint: vcs_Branch_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt name repositoryId } } }"`;

exports[`graphql-client write batch upsert record with null primary key field 1`] = `"mutation { insert_vcs_Organization (objects: [{uid: \\"faros-ai\\", origin: \\"mytestsource\\"}], on_conflict: {constraint: vcs_Organization_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt source uid } } }"`;

exports[`graphql-client write batch upsert self-referent model 1`] = `"mutation { insert_org_Employee (objects: [{uid: \\"7\\"}], on_conflict: {constraint: org_Employee_pkey, update_columns: [uid]}) { returning { id refreshedAt uid } } }"`;

exports[`graphql-client write batch upsert self-referent model 2`] = `"mutation { insert_org_Employee (objects: [{uid: \\"9\\", origin: \\"mytestsource\\"}], on_conflict: {constraint: org_Employee_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt uid } } }"`;

exports[`graphql-client write batch upsert self-referent model 3`] = `"mutation { insert_org_Employee (objects: [{uid: \\"10\\", origin: \\"mytestsource\\", managerId: \\"t1|gql-e2e-v2|7\\"}, {uid: \\"7\\", origin: \\"mytestsource\\", managerId: \\"t1|gql-e2e-v2|9\\"}, {uid: \\"8\\", origin: \\"mytestsource\\", managerId: \\"t1|gql-e2e-v2|9\\"}], on_conflict: {constraint: org_Employee_pkey, update_columns: [managerId, origin, refreshedAt]}) { returning { id refreshedAt uid } } }"`;

exports[`graphql-client write batch upsert update as upsert 1`] = `"mutation { insert_vcs_Organization (objects: [{uid: \\"playg\\", source: \\"Bitbucket\\"}], on_conflict: {constraint: vcs_Organization_pkey, update_columns: [source, uid]}) { returning { id refreshedAt source uid } } }"`;

exports[`graphql-client write batch upsert update as upsert 2`] = `"mutation { insert_vcs_Repository (objects: [{name: \\"repo1\\", organizationId: \\"4d1025a2cfb95b311b9871a49de3a56bf594beee\\"}], on_conflict: {constraint: vcs_Repository_pkey, update_columns: [name, organizationId]}) { returning { id refreshedAt name organizationId } } }"`;

exports[`graphql-client write batch upsert update as upsert 3`] = `"mutation { insert_vcs_Commit (objects: [{sha: \\"b500332b58c74fc15302c8961e54facf66c16c44\\", origin: \\"my-origin\\", repositoryId: \\"f9b8248bfcbd563eb23d05a8b1c188a873de787e\\"}], on_conflict: {constraint: vcs_Commit_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt repositoryId sha } } }"`;

exports[`graphql-client write batch upsert update as upsert 4`] = `"mutation { insert_vcs_PullRequest (objects: [{number: 2, origin: \\"my-origin\\", repositoryId: \\"f9b8248bfcbd563eb23d05a8b1c188a873de787e\\"}], on_conflict: {constraint: vcs_PullRequest_pkey, update_columns: [origin, refreshedAt]}) { returning { id refreshedAt number repositoryId } } }"`;

exports[`graphql-client write batch upsert update as upsert 5`] = `"mutation { m0: insert_vcs_PullRequest_one (object: {number: 2, repository: {data: {name: \\"repo1\\", organization: {data: {uid: \\"playg\\", source: \\"Bitbucket\\"}, on_conflict: {constraint: vcs_Organization_pkey, update_columns: [refreshedAt]}}}, on_conflict: {constraint: vcs_Repository_pkey, update_columns: [refreshedAt]}}, mergeCommit: {data: {sha: \\"b500332b58c74fc15302c8961e54facf66c16c44\\", repository: {data: {name: \\"repo1\\", organization: {data: {uid: \\"playg\\", source: \\"Bitbucket\\"}, on_conflict: {constraint: vcs_Organization_pkey, update_columns: [refreshedAt]}}}, on_conflict: {constraint: vcs_Repository_pkey, update_columns: [refreshedAt]}}}, on_conflict: {constraint: vcs_Commit_pkey, update_columns: [refreshedAt]}}, mergedAt: \\"2022-09-21T03:00:27.505Z\\", origin: \\"my-origin\\"}, on_conflict: {constraint: vcs_PullRequest_pkey, update_columns: [mergeCommitId, mergedAt, origin]}) { id } }"`;

exports[`groupByKeys 1 group of 2 1`] = `
Array [
  Array [
    "u0a",
    "u0b",
  ],
]
`;

exports[`groupByKeys 2 groups of 1 1`] = `
Array [
  Array [
    "u0a",
  ],
  Array [
    "u1a",
  ],
]
`;

exports[`groupByKeys 2 groups of mix 1`] = `
Array [
  Array [
    "u0a",
  ],
  Array [
    "u1a",
    "u1b",
  ],
]
`;

exports[`groupByKeys 3 groups of 2 1`] = `
Array [
  Array [
    "u0a",
    "u0b",
  ],
  Array [
    "u1a",
    "u1b",
  ],
  Array [
    "u2a",
    "u2b",
  ],
]
`;

exports[`toLevels ignore other models 1`] = `
Array [
  Array [
    "u0",
  ],
  Array [
    "u2",
  ],
]
`;

exports[`toLevels imbalanced tree 1`] = `
Array [
  Array [
    "u0",
    "u3",
  ],
  Array [
    "u1",
  ],
  Array [
    "u2",
  ],
]
`;

exports[`toLevels simple chain 1`] = `
Array [
  Array [
    "u0",
  ],
  Array [
    "u1",
  ],
  Array [
    "u2",
  ],
]
`;

exports[`toLevels simple chain 2`] = `
Array [
  Array [
    "u0",
  ],
  Array [
    "u1",
  ],
]
`;

exports[`toLevels simple chain 3`] = `
Array [
  Array [
    "u0",
  ],
]
`;

exports[`toLevels simple tree 1`] = `
Array [
  Array [
    "u0",
    "u1",
  ],
  Array [
    "u2",
  ],
]
`;
