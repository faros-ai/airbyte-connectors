import {AirbyteConnector} from '../connector';
import {
  AirbyteCatalogMessage,
  AirbyteConfig,
  AirbyteConfiguredCatalog,
  AirbyteMessage,
  AirbyteState,
} from '../protocol';

/**
 * Airbyte Source
 * https://docs.airbyte.io/understanding-airbyte/airbyte-specification#source
 */
export abstract class AirbyteSource<
  Config extends AirbyteConfig
> extends AirbyteConnector {
  /**
   * @returns An AirbyteCatalog representing the available streams and fields in
   * this integration. For example, given valid credentials to a Postgres
   * database, returns an Airbyte catalog where each postgres table is a stream,
   * and each table column is a field.
   */
  abstract discover(config: Config): Promise<AirbyteCatalogMessage>;

  /**
   * @returns A generator of the AirbyteMessages generated by reading the source
   * with the given configuration, catalog, and state.
   */
  abstract read(
    config: Config,
    catalog: AirbyteConfiguredCatalog,
    state?: AirbyteState
  ): AsyncGenerator<AirbyteMessage>;
}
