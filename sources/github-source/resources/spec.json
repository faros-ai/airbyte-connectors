{
  "documentationUrl": "https://docs.faros.ai",
  "connectionSpecification": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Github Spec",
    "type": "object",
    "required": [
      "authentication"
    ],
    "additionalProperties": true,
    "properties": {
      "authentication": {
        "title": "Authentication",
        "description": "Choose your GitHub authentication method",
        "type": "object",
        "order": 0,
        "oneOf": [
          {
            "type": "object",
            "title": "Personal Access Token",
            "properties": {
              "type": {
                "type": "string",
                "const": "token",
                "order": 0
              },
              "personal_access_token": {
                "type": "string",
                "title": "Personal Access Token",
                "airbyte_secret": true,
                "order": 1
              }
            },
            "required": [
              "type",
              "personal_access_token"
            ]
          },
          {
            "type": "object",
            "title": "GitHub App",
            "properties": {
              "type": {
                "type": "string",
                "const": "app",
                "order": 0
              },
              "app_id": {
                "type": "integer",
                "title": "App ID",
                "description": "GitHub App ID",
                "order": 1
              },
              "private_key": {
                "type": "string",
                "title": "Private Key",
                "description": "GitHub App Private Key",
                "airbyte_secret": true,
                "multiline": true,
                "order": 2
              }
            },
            "required": [
              "type",
              "app_id",
              "private_key"
            ]
          }
        ]
      },
      "url": {
        "order": 1,
        "type": "string",
        "title": "GitHub API URL",
        "description": "GitHub API URL, e.g for GitHub Enterprise: https://my-ghe-host.com/api/v3",
        "default": "https://api.github.com"
      },
      "reject_unauthorized": {
        "order": 2,
        "type": "boolean",
        "title": "Enable certificate validation",
        "description": "Enable certificate validation for the GitHub server",
        "default": true
      },
      "use_faros_graph_repos_selection": {
        "order": 3,
        "type": "boolean",
        "title": "Use Faros Graph for Repositories selection",
        "description": "Use Faros Graph for selecting which repositories should be fetched (Faros credentials are required).",
        "default": false
      },
      "organizations": {
        "order": 4,
        "title": "Organizations list",
        "description": "List of GitHub organization from which to fetch data. If none passed, all visible organizations for the authenticated user/app will be used.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "examples": [
          "apache",
          "airbytehq"
        ]
      },
      "excluded_organizations": {
        "order": 5,
        "title": "Excluded Organizations list",
        "description": "List of GitHub organization from which data won't be fetched. By default, no organizations are excluded. If organizations list is specified, this list will be ignored.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "examples": [
          "apache",
          "airbytehq"
        ]
      },
      "repositories": {
        "order": 6,
        "title": "Repositories list",
        "description": "List of GitHub repositories from which to fetch data. If none passed for an organization, all visible organization repositories for the authenticated user/app will be used.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "examples": [
          "apache/repo1",
          "airbytehq/repo2"
        ]
      },
      "excluded_repositories": {
        "order": 7,
        "title": "Excluded Repositories list",
        "description": "List of GitHub repositories from which data won't be fetched. By default, no repositories are excluded for an organization. If repositories list contains at least one repository for an organization, repositories for the same organization on this list will be ignored.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "examples": [
          "apache/repo1",
          "airbytehq/repo2"
        ]
      },
      "enterprises": {
        "order": 8,
        "title": "Enterprises list",
        "description": "List of Enterprises from which to fetch data (only when enterprise streams enabled). Only available using authentication with personal access token.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "examples": [
          "apache",
          "airbytehq"
        ]
      },
      "run_mode": {
        "order": 9,
        "title": "Run Mode",
        "description": "Run mode for selecting the usage of the connector",
        "type": "string",
        "default": "Full",
        "enum": [
          "EnterpriseCopilotOnly",
          "CopilotEvaluationApp",
          "CopilotEvaluation",
          "Minimum",
          "Full",
          "Custom"
        ]
      },
      "custom_streams": {
        "order": 10,
        "title": "Custom Streams",
        "description": "List of streams to run when selected Run Mode is Custom (if empty, all available streams will run)",
        "type": "array",
        "items": {
          "type": "string"
        },
        "examples": [
          "faros_organizations",
          "faros_repositories"
        ]
      },
      "fetch_teams": {
        "order": 11,
        "type": "boolean",
        "title": "Fetch teams",
        "description": "Fetch teams from organization to populate teams and team memberships.",
        "default": false
      },
      "fetch_pull_request_files": {
        "order": 12,
        "type": "boolean",
        "title": "Fetch Pull Request Files",
        "description": "Fetch Pull Requests associated files",
        "default": false
      },
      "fetch_pull_request_reviews": {
        "order": 13,
        "type": "boolean",
        "title": "Fetch Pull Request Reviews",
        "description": "Fetch Pull Requests associated reviews",
        "default": true
      },
      "copilot_licenses_dates_fix": {
        "order": 14,
        "type": "boolean",
        "title": "Copilot Licenses Dates Fix",
        "description": "Fix the licenses dates for Copilot seats when using team assignments (requires Audit Log API)",
        "default": true
      },
      "copilot_metrics_ga": {
        "order": 15,
        "type": "boolean",
        "title": "Copilot Metrics GA",
        "description": "Use Copilot Metrics GA API instead of Copilot Usage Beta API",
        "default": false
      },
      "cutoff_days": {
        "order": 16,
        "type": "integer",
        "title": "Cutoff Days",
        "default": 90,
        "description": "Only fetch data updated after cutoff"
      },
      "bucket_id": {
        "order": 17,
        "type": "integer",
        "title": "Bucket Number",
        "description": "Bucket number for this source to determine which portion of organization and repositories to pull. Use it when distributing the load between multiple sources.",
        "default": 1
      },
      "bucket_total": {
        "order": 18,
        "type": "integer",
        "title": "Total Number of Buckets",
        "description": "Total number of buckets to distribute organizations and repositories across. Use it when distributing the load between multiple sources",
        "default": 1
      },
      "round_robin_bucket_execution": {
        "order": 19,
        "type": "boolean",
        "title": "Round Robin Bucket Execution",
        "description": "When enabled, syncs rotate through all buckets, processing one bucket per sync. When disabled, only the bucket specified by 'bucket_id' is synced.",
        "default": false
      },
      "bucket_ranges": {
        "order": 20,
        "type": "array",
        "items": {
          "type": "string"
        },
        "title": "Bucket Ranges",
        "description": "List of bucket ranges to process when round robin bucket execution is enabled. Each element can be either a single bucket number (e.g., '7') or a range of buckets (e.g., '3-5'). All bucket numbers must be between 1 and 'bucket_total'.",
        "examples": [
          "3-5",
          "7"
        ]
      },
      "api_url": {
        "order": 21,
        "type": "string",
        "title": "Faros API URL",
        "description": "The Faros API URL.",
        "default": "https://prod.api.faros.ai"
      },
      "api_key": {
        "order": 22,
        "title": "Faros API Key",
        "type": "string",
        "description": "The Faros API key to use to access the API.",
        "airbyte_secret": true
      },
      "graph": {
        "order": 23,
        "type": "string",
        "title": "Graph name",
        "description": "The Faros graph name.",
        "default": "default"
      },
      "page_size": {
        "order": 24,
        "type": "integer",
        "title": "Page Size",
        "description": "Maximum number of items in a paginated response",
        "default": 100
      },
      "commits_page_size": {
        "order": 25,
        "type": "integer",
        "title": "Commits Page Size",
        "description": "Maximum number of items in a paginated response for commits",
        "default": 100
      },
      "pull_requests_page_size": {
        "order": 26,
        "type": "integer",
        "title": "Pull Requests Page Size",
        "description": "Maximum number of items in a paginated response for pull requests",
        "default": 25
      },
      "timeout": {
        "order": 27,
        "type": "integer",
        "title": "Request Timeout",
        "description": "Timeout in milliseconds for each request to the GitHub API",
        "default": 120000
      },
      "concurrency_limit": {
        "order": 28,
        "type": "integer",
        "title": "Concurrency limit",
        "description": "Maximum concurrency to run with",
        "default": 4
      },
      "backfill": {
        "order": 29,
        "type": "boolean",
        "title": "Backfill",
        "description": "Backfill data from the start date to the end date.",
        "default": false
      },
      "start_date": {
        "order": 30,
        "type": "string",
        "title": "Start Date",
        "description": "The date from which to start syncing data."
      },
      "end_date": {
        "order": 31,
        "type": "string",
        "title": "End Date",
        "description": "The date at which to stop syncing data."
      },
      "fetch_pull_request_diff_coverage": {
        "type": "boolean",
        "title": "Fetch Pull Request diff coverage",
        "default": false,
        "order": 32
      },
      "pull_request_cutoff_lag_seconds": {
        "title": "Pull Request Cutoff Lag (seconds)",
        "description": "Apply lag to the end cutoff saved in the state. PRs updated after this will be rewritten during the next sync.",
        "type": "integer",
        "default": 0,
        "order": 33
      }
    }
  }
}
