name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Cache Node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install -g lerna @lerna/legacy-package-management && lerna bootstrap --hoist

      - name: Test
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
        run: lerna run test-cov

  test-packaging:
    if: ${{ github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch' }} # Only on PRs
    name: Packaging Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm install -g lerna @lerna/legacy-package-management && lerna bootstrap --hoist

      - name: Test Airbyte CDK package
        run: |
          cd faros-airbyte-cdk && \
          npm publish --dry-run

      - name: Test Airbyte Common package
        run: |
          cd faros-airbyte-common && \
          npm publish --dry-run

      - name: Test Faros Destination package
        run: |
          cd destinations/airbyte-faros-destination && \
          npm publish --dry-run
