name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0

    steps:
      - name: Check out
        uses: actions/checkout@v2.3.4

      - name: Cache Node modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install -g npm@7 lerna && lerna bootstrap --hoist

      - name: Test
        run: lerna run test-cov

      - name: Source Acceptance Test
        run: |
          for i in $(ls -d sources/*/)
          do
            ./scripts/source-acceptance-test.sh $(echo $i | cut -f2 -d'/')
          done
        env:
          EXAMPLE_SOURCE_TEST_CREDS: ${{ secrets.EXAMPLE_SOURCE_TEST_CREDS }}

  publish-packages:
    name: Publish Node packages
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: test
    if: github.ref == 'refs/heads/main' # Skip PRs
    steps:
      - name: Check out
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0 # Fetch tags for check below.

      - name: Setup Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 14

      - name: Extract version
        id: extract-version
        run: |
          CDK_VERSION="$(node -p 'require("./lerna.json").version')"
          echo "CDK_VERSION=$CDK_VERSION" >> $GITHUB_ENV

      - name: Check tag exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: check-tag
        with:
          tag: v${{ env.CDK_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          lerna bootstrap --hoist
          cd cdk
          npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create tag
        if: steps.check-tag.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2.0.1
        with:
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: v
          github_repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.CDK_VERSION }}
