name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0

    steps:
      - name: Check out
        uses: actions/checkout@v2.4.0

      - name: Cache Node modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install -g npm@7 lerna && lerna bootstrap --hoist

      - name: Source Acceptance Test
        if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }} # Skip PRs
        env:
          AGILEACCELERATOR_SOURCE_TEST_CONFIG: ${{ secrets.AGILEACCELERATOR_SOURCE_TEST_CONFIG }}
          BITBUCKET_SOURCE_TEST_CONFIG: ${{ secrets.BITBUCKET_SOURCE_TEST_CONFIG }}
          CUSTOMER_IO_SOURCE_TEST_CONFIG: ${{ secrets.CUSTOMER_IO_SOURCE_TEST_CONFIG }}
          GOOGLECALENDAR_SOURCE_TEST_CONFIG: ${{ secrets.GOOGLECALENDAR_SOURCE_TEST_CONFIG }}
          HARNESS_SOURCE_TEST_CONFIG: ${{ secrets.HARNESS_SOURCE_TEST_CONFIG }}
          PAGERDUTY_SOURCE_TEST_CONFIG: ${{ secrets.PAGERDUTY_SOURCE_TEST_CONFIG }}
          STATUSPAGE_SOURCE_TEST_CONFIG: ${{ secrets.STATUSPAGE_SOURCE_TEST_CONFIG }}
          SQUADCAST_SOURCE_TEST_CONFIG: ${{ secrets.SQUADCAST_SOURCE_TEST_CONFIG }}
        run: |
          for i in $(ls -d sources/*/)
          do
            source=$(echo $i | cut -f2 -d'/')
            case "$source" in
              harness-source|jenkins-source|phabricator-source)
                echo "Skipping $source acceptance tests"
                ;;
              *)
                ./scripts/source-acceptance-test.sh $source
                ;;
            esac
          done
