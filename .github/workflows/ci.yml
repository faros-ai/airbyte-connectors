name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0

    steps:
      - name: Check out
        uses: actions/checkout@v2.3.5

      - name: Cache Node modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install -g npm@7 lerna && lerna bootstrap --hoist

      - name: Test
        run: lerna run test-cov

      - name: Run Jenkins server
        if: github.ref == 'refs/heads/main' # Skip PRs
        run: |
          mkdir -p ${{ github.workspace }}/sources/jenkins-source/test_files/jenkins/data/secrets/
          docker run -d -u 0 -i --name jenkins -p 8080:8080 -p 50000:50000 -v ${{ github.workspace }}/sources/jenkins-source/test_files/jenkins/data:/var/jenkins_home jenkins/jenkins:lts-jdk11
          echo "Waiting until Jenkins is up"
          waiting=0
          until curl -s -I -X GET http://127.0.0.1:8080; do
            docker ps -a
            let waiting+=3
            sleep 3
            if [ $waiting -eq 120 ]; then
              echo "Jenkins server did not respond within 120 seconds"
              exit 42
            fi
          done
          sudo chown -R $USER:$USER ${{ github.workspace }}/sources/jenkins-source/test_files/jenkins/data

      - name: Source Acceptance Test
        if: github.ref == 'refs/heads/main' # Skip PRs
        run: |
          for i in $(ls -d sources/*/)
          do
            source=$(echo $i | cut -f2 -d'/')
            if [[ $source != "phabricator-source" ]]; then
              ./scripts/source-acceptance-test.sh $source
            fi
          done

      - name: Stop Jenkins server
        if: github.ref == 'refs/heads/main' # Skip PRs
        run: |
          docker stop jenkins
          docker rm jenkins
