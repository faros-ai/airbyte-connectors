name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  publish-cdk:
    name: Publish CDK
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0
    steps:
      - name: Check out
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0 # Fetch tags for check below.

      - name: Setup Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - name: Extract version
        id: extract-version
        run: |
          CDK_VERSION="$(jq -r '.version' < lerna.json)"
          echo "CDK_VERSION=$CDK_VERSION" >> $GITHUB_ENV

      - name: Check tag exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: check-tag
        with:
          tag: v${{ env.CDK_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        if: steps.check-tag.outputs.exists == 'false'
        run: npm install -g npm@7 lerna && lerna bootstrap --hoist

      - name: Publish packages
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          cd faros-airbyte-cdk && \
          npm i && \
          npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create tag
        if: steps.check-tag.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2.0.1
        with:
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: v
          github_repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.CDK_VERSION }}


  publish-connectors:
    name: Publish Connectors
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out
        uses: actions/checkout@v2.3.5

      - name: Docker login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish connector images
        run: |
          for connector_path in $(ls -d sources/*/ destinations/*/)
          do
            ./scripts/publish-connector.sh $connector_path
          done
