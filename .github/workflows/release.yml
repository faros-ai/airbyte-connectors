name: Release

on:
  release:
    types: [created]

jobs:
  publish-packages:
    name: Publish packages
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      FORCE_COLOR: true
      HUSKY_SKIP_INSTALL: 1
      HUSKY_SKIP_HOOKS: 1
      HUSKY: 0
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org

      - name: Extract tag version
        id: extract-tag-version
        run: |
          TAG="${GITHUB_REF:10}"
          TAG_VERSION="${TAG//v/}"
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install -g lerna && lerna bootstrap --hoist

      - name: Publish Airbyte CDK package
        run: |
          cd faros-airbyte-cdk && \
          npm i && \
          npm version ${{ env.TAG_VERSION }} && \
          npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Airbyte Common package
        run: |
          cd faros-airbyte-common && \
          npm i && \
          npm version ${{ env.TAG_VERSION }} && \
          npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Faros Destination package
        run: |
          cd destinations/airbyte-faros-destination && \
          cat package.json | jq --arg V "${{ env.TAG_VERSION }}" '(.dependencies."faros-airbyte-cdk",.dependencies."faros-airbyte-common") = $V' > package.tmp && \
          mv package.tmp package.json && \
          npm i && \
          npm version ${{ env.TAG_VERSION }} && \
          npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-connectors:
    name: Publish connectors
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Extract tag version
        id: extract-tag-version
        run: |
          TAG="${GITHUB_REF:10}"
          TAG_VERSION="${TAG//v/}"
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV

      - name: Docker login
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish connector images
        env:
          DOCKER_BUILDKIT: 1
        run: |
          for connector_path in $(ls -d sources/*/ destinations/*/)
          do
            ./scripts/publish-connector.sh $connector_path ${{ env.TAG_VERSION }}
          done
